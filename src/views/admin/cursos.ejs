<%- include('../layouts/admin') %>

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Gestión de Cursos</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#crearCursoModal">
            <i class="fas fa-plus"></i> Nuevo Curso
        </button>
    </div>

    <!-- Tabla de Cursos -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Nombre</th>
                            <th>Docente</th>
                            <th>Estudiantes</th>
                            <th>Fechas</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (cursos && cursos.length > 0) { %>
                            <% cursos.forEach(curso => { %>
                                <tr>
                                    <td><%= curso.codigo %></td>
                                    <td><%= curso.nombre %></td>
                                    <td><%= curso.docente.nombre %></td>
                                    <td><%= curso.estudiantes.length %>/<%= curso.capacidadMaxima %></td>
                                    <td>
                                        <small class="d-block">Inicio: <%= new Date(curso.fechaInicio).toLocaleDateString() %></small>
                                        <small class="d-block">Fin: <%= new Date(curso.fechaFin).toLocaleDateString() %></small>
                                    </td>
                                    <td>
                                        <span class="badge bg-<%= curso.estado === 'activo' ? 'success' : 'danger' %>">
                                            <%= curso.estado %>
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-info me-1" onclick="editarCurso('<%= curso._id %>')">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger" onclick="eliminarCurso('<%= curso._id %>')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="text-center">No hay cursos registrados</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal Crear Curso -->
<div class="modal fade" id="crearCursoModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Crear Nuevo Curso</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formCrearCurso">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Nombre del Curso</label>
                            <input type="text" class="form-control" name="nombre" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Código</label>
                            <input type="text" class="form-control" name="codigo" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" name="descripcion" rows="3" required></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Docente</label>
                            <select class="form-select" name="docente" required>
                                <option value="">Seleccionar docente...</option>
                                <% docentes.forEach(docente => { %>
                                    <option value="<%= docente._id %>"><%= docente.nombre %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Capacidad Máxima</label>
                            <input type="number" class="form-control" name="capacidadMaxima" min="1" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Inicio</label>
                            <input type="date" class="form-control" name="fechaInicio" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Fin</label>
                            <input type="date" class="form-control" name="fechaFin" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Horario</label>
                        <div id="horarioContainer">
                            <div class="row horario-item mb-2">
                                <div class="col-md-4">
                                    <select class="form-select" name="dia[]" required>
                                        <option value="">Día...</option>
                                        <option value="lunes">Lunes</option>
                                        <option value="martes">Martes</option>
                                        <option value="miércoles">Miércoles</option>
                                        <option value="jueves">Jueves</option>
                                        <option value="viernes">Viernes</option>
                                        <option value="sábado">Sábado</option>
                                        <option value="domingo">Domingo</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <input type="time" class="form-control" name="horaInicio[]" required>
                                </div>
                                <div class="col-md-3">
                                    <input type="time" class="form-control" name="horaFin[]" required>
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-danger btn-sm" onclick="eliminarHorario(this)">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary btn-sm mt-2" onclick="agregarHorario()">
                            <i class="fas fa-plus"></i> Agregar Horario
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="crearCurso()">Crear Curso</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Editar Curso -->
<div class="modal fade" id="editarCursoModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar Curso</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formEditarCurso">
                    <input type="hidden" name="id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Nombre del Curso</label>
                            <input type="text" class="form-control" name="nombre" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Código</label>
                            <input type="text" class="form-control" name="codigo" readonly>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" name="descripcion" rows="3" required></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Docente</label>
                            <select class="form-select" name="docente" required>
                                <% docentes.forEach(docente => { %>
                                    <option value="<%= docente._id %>"><%= docente.nombre %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Capacidad Máxima</label>
                            <input type="number" class="form-control" name="capacidadMaxima" min="1" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Inicio</label>
                            <input type="date" class="form-control" name="fechaInicio" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Fin</label>
                            <input type="date" class="form-control" name="fechaFin" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Estado</label>
                        <select class="form-select" name="estado" required>
                            <option value="activo">Activo</option>
                            <option value="inactivo">Inactivo</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Horario</label>
                        <div id="horarioContainerEdit"></div>
                        <button type="button" class="btn btn-secondary btn-sm mt-2" onclick="agregarHorarioEdit()">
                            <i class="fas fa-plus"></i> Agregar Horario
                        </button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="actualizarCurso()">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<script>
// Funciones para manejar el horario
function agregarHorario() {
    const container = document.getElementById('horarioContainer');
    const template = container.children[0].cloneNode(true);
    template.querySelectorAll('input, select').forEach(input => input.value = '');
    container.appendChild(template);
}

function agregarHorarioEdit() {
    const container = document.getElementById('horarioContainerEdit');
    const template = document.querySelector('#horarioContainer .horario-item').cloneNode(true);
    template.querySelectorAll('input, select').forEach(input => input.value = '');
    container.appendChild(template);
}

function eliminarHorario(btn) {
    const container = btn.closest('.horario-item').parentElement;
    if (container.children.length > 1) {
        btn.closest('.horario-item').remove();
    }
}

// Crear Curso
function crearCurso() {
    const form = document.getElementById('formCrearCurso');
    const formData = new FormData(form);
    
    // Procesar horario
    const horario = [];
    const dias = formData.getAll('dia[]');
    const horasInicio = formData.getAll('horaInicio[]');
    const horasFin = formData.getAll('horaFin[]');
    
    for (let i = 0; i < dias.length; i++) {
        if (dias[i] && horasInicio[i] && horasFin[i]) {
            horario.push({
                dia: dias[i],
                horaInicio: horasInicio[i],
                horaFin: horasFin[i]
            });
        }
    }

    const data = {
        nombre: formData.get('nombre'),
        codigo: formData.get('codigo'),
        descripcion: formData.get('descripcion'),
        docente: formData.get('docente'),
        capacidadMaxima: formData.get('capacidadMaxima'),
        fechaInicio: formData.get('fechaInicio'),
        fechaFin: formData.get('fechaFin'),
        horario: JSON.stringify(horario)
    };

    fetch('/admin/cursos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Curso creado',
                text: data.message,
                timer: 1500
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
        });
    });
}

// Editar Curso
function editarCurso(id) {
    const curso = cursos.find(c => c._id === id);
    if (curso) {
        const form = document.getElementById('formEditarCurso');
        form.id.value = curso._id;
        form.nombre.value = curso.nombre;
        form.codigo.value = curso.codigo;
        form.descripcion.value = curso.descripcion;
        form.docente.value = curso.docente._id;
        form.capacidadMaxima.value = curso.capacidadMaxima;
        form.fechaInicio.value = curso.fechaInicio.split('T')[0];
        form.fechaFin.value = curso.fechaFin.split('T')[0];
        form.estado.value = curso.estado;

        // Limpiar y recrear horarios
        const container = document.getElementById('horarioContainerEdit');
        container.innerHTML = '';
        curso.horario.forEach(h => {
            const template = document.querySelector('#horarioContainer .horario-item').cloneNode(true);
            template.querySelector('[name="dia[]"]').value = h.dia;
            template.querySelector('[name="horaInicio[]"]').value = h.horaInicio;
            template.querySelector('[name="horaFin[]"]').value = h.horaFin;
            container.appendChild(template);
        });

        new bootstrap.Modal(document.getElementById('editarCursoModal')).show();
    }
}

// Actualizar Curso
function actualizarCurso() {
    const form = document.getElementById('formEditarCurso');
    const formData = new FormData(form);
    const id = formData.get('id');

    // Procesar horario
    const horario = [];
    const container = document.getElementById('horarioContainerEdit');
    container.querySelectorAll('.horario-item').forEach(item => {
        const dia = item.querySelector('[name="dia[]"]').value;
        const horaInicio = item.querySelector('[name="horaInicio[]"]').value;
        const horaFin = item.querySelector('[name="horaFin[]"]').value;
        
        if (dia && horaInicio && horaFin) {
            horario.push({
                dia,
                horaInicio,
                horaFin
            });
        }
    });

    const data = {
        nombre: formData.get('nombre'),
        descripcion: formData.get('descripcion'),
        docente: formData.get('docente'),
        capacidadMaxima: formData.get('capacidadMaxima'),
        fechaInicio: formData.get('fechaInicio'),
        fechaFin: formData.get('fechaFin'),
        estado: formData.get('estado'),
        horario: JSON.stringify(horario)
    };

    fetch(`/admin/cursos/${id}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Curso actualizado',
                text: data.message,
                timer: 1500
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
        });
    });
}

// Eliminar Curso
function eliminarCurso(id) {
    Swal.fire({
        title: '¿Estás seguro?',
        text: "Esta acción no se puede deshacer",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Sí, eliminar',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/cursos/${id}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Curso eliminado',
                        text: data.message,
                        timer: 1500
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message
                });
            });
        }
    });
}

// Pasar los cursos del servidor al cliente para edición
const cursos = <%- JSON.stringify(cursos) %>;
</script> 